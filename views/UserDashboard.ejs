<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard | YourHR</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-100">
    <nav class="bg-blue-600 p-4">
      <div class="container mx-auto flex justify-between items-center">
        <h1 class="text-white text-2xl font-bold">YourHR</h1>
        <div>
          <button
            id="logoutButton"
            class="bg-white text-blue-600 px-4 py-2 rounded-md"
          >
            Logout
          </button>
        </div>
      </div>
    </nav>
    <div class="container mx-auto p-8">
      <h2 class="text-3xl font-bold text-blue-600 mb-6">
        Welcome to Your Dashboard
      </h2>
      <p class="text-gray-700 mb-8">
        Thank you for signing up with YourHR! Here you can update your profile,
        upload your resume, and start your journey to find the perfect job.
      </p>
      <h1 class="text-2xl font-bold text-blue-600 mb-6">
        .pdf, .doc, .docx files are allowed
      </h1>
      <p class="text-red-600 font-bold mb-6">
        Please name your resume file in the format: <strong>email_CV</strong>
      </p>
      <form
        id="resumeUploadForm"
        class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4"
      >
        <div class="mb-4">
          <label
            class="block text-gray-700 text-sm font-bold mb-2"
            for="resume"
          >
            Upload New Resume
          </label>
          <input
            type="file"
            name="resume"
            id="resume"
            class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            required
          />
        </div>
        <div class="flex items-center justify-between">
          <button
            class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            type="submit"
          >
            Upload Resume
          </button>
        </div>
      </form>
    </div>
    <script>
      document
        .getElementById("resumeUploadForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault(); // Prevent default form submission

          // Create FormData object
          const formData = new FormData(this);

          // Show loading indicator
          showLoading(true);

          try {
            const response = await fetch("/upload-resume", {
              method: "POST",
              body: formData, // Send form data as is
            });

            if (response.ok) {
              const responseData = await response.json();
              window.location.href = "/success";
              // Optionally handle the response or update the UI
            } else {
              const errorResponse = await response.json();
              const errorMessages = errorResponse.errors
                ? errorResponse.errors.map((error) => error.message).join("\n")
                : errorResponse.error || "An error occurred";
              alert(`Error: ${errorMessages}`);
            }
          } catch (error) {
            console.error("Upload Error:", error);
            alert("An error occurred. Please try again later.");
          } finally {
            // Hide loading indicator
            showLoading(false);
          }
        });

      // Function to show loading indicator (basic example)
      function showLoading(isLoading) {
        const button = document.querySelector('button[type="submit"]');
        if (isLoading) {
          button.disabled = true;
          button.textContent = "Uploading...";
        } else {
          button.disabled = false;
          button.textContent = "Upload Resume";
        }
      }

      document
        .getElementById("logoutButton")
        .addEventListener("click", async () => {
          try {
            // Get email from cookie (if stored) or some other method
            const email = getCookie("email");

            if (!email) {
              alert("No user email found.");
              return;
            }

            const response = await fetch("/auth/logout", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ email }), // Send email in JSON body
            });

            if (response.ok) {
              // Redirect to login page or home page
              window.location.href = "/login";
            } else {
              const errorResponse = await response.json();
              alert(
                `Error: ${
                  errorResponse.error || "An unexpected error occurred"
                }`
              );
            }
          } catch (error) {
            console.error("Logout Error:", error);
            alert("An error occurred. Please try again later.");
          }
        });

      // Function to get a cookie value by name
      function getCookie(name) {
        const value = `; ${document.cookie}`;
        const parts = value.split(`; ${name}=`);
        if (parts.length === 2) return parts.pop().split(";").shift();
      }
    </script>
  </body>
</html>
